openapi: 3.0.3
info:
  title: Greeting API
  description: A simple API to greet users
  version: 1.0.0
servers:
  - url: "http://localhost:3000"
    description: Local server
paths:
  /api/v1/auth/signup:
    post:
      tags:
        - Auth
      summary: Sign up a new user
      description: "Registers a new user with email, password, role, and wallet address"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  description: User's password
                role:
                  type: string
                  description: Role of the user in the system
                walletAddress:
                  type: string
                  description: Blockchain wallet address of the user
              required:
                - email
                - password
                - role
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: User created successfully.
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
              example:
                message: Validation failed
                errors:
                  email: Email Format is Incorrect
        "409":
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: An account with this email already exists.
        "500":
          description: Internal server or database error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
              example:
                message: Internal server error
                error: Database connection failed

  /api/v1/auth/signin:
    post:
      tags:
        - Auth
      summary: Sign in a user
      description: "Authenticates a user using email and password, returning an access token and a refresh token in an HTTP-only cookie"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
                password:
                  type: string
                  description: User password
              required:
                - email
                - password
      responses:
        "200":
          description: Logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  accessToken:
                    type: string
                    description: JWT access token
                  tokenType:
                    type: string
                    example: Bearer
              example:
                message: Logged in successfully
                accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                tokenType: Bearer
        "400":
          description: Validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                  message:
                    type: string
              example:
                message: Validation failed
                errors:
                  email: Email format is incorrect
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Invalid credentials
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Internal server error

  /api/v1/auth/me:
    get:
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully fetched current user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
        "401":
          description: Unauthorized, no token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: Forbidden, invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/auth/signout:
    post:
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Logged out successfully
        "401":
          description: Unauthorized, no token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: Forbidden, invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/auth/refresh:
    post:
      tags:
        - Auth
      responses:
        "200":
          description: New access token issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
              example:
                accessToken: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "401":
          description: Unauthorized, no refresh token cookie
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Unauthorized
        "403":
          description: Invalid, mismatched, or expired refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Token mismatch
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Internal server error

  /api/v1/organisations/create:
    post:
      tags:
        - Organisation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the organisation
              required:
                - name
      responses:
        "201":
          description: Organisation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  organisation:
                    type: object
                    properties:
                      name:
                        type: string
                      owner:
                        type: string
              example:
                message: Organisation created successfully
                organisation:
                  name: My Organisation
                  owner: 12345
        "400":
          description: Validation failed or missing wallet address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: object
              example:
                message: Validation failed
                errors:
                  name: Name is required
        "401":
          description: Unauthorized, no token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Unauthorized: No token provided"
        "403":
          description: Forbidden (invalid/expired token or not an admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Forbidden: Invalid or expired token"
        "409":
          description: Organisation already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: A record with this name already exists.
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Auth
    description: Endpoints for authentication and session management
  - name: Organisation
    description: Endpoints for managing organisations